<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>edu.hm.cs.projektstudium.findlunch</groupId>
	<artifactId>webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<!-- STANDALONE TOMCAT CONFIG: Change packaging from jar to war for traditional deployment -->
	<!-- <packaging>war</packaging> -->
	<packaging>jar</packaging>

	<name>webapp</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<integration-tests.skip>true</integration-tests.skip>
		<!-- STANDALONE TOMCAT CONFIG: For standalone tomcat deployment set correct version of the tomcat to use -->
		<!-- <tomcat.version>8.0.20</tomcat.version> -->
		<!--<tomcat.version>8.0.36</tomcat.version>-->
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.3.3.RELEASE</version>
	</parent>

	<dependencies>
		<!-- STANDALONE TOMCAT CONFIG: Set the embedded tomcat to provided to not interfere with the standalone tomcat-->
		<!-- <dependency>
 			       <groupId>org.springframework.boot</groupId>
    			    <artifactId>spring-boot-starter-tomcat</artifactId>
   				     <scope>provided</scope>
   			 </dependency>
   		-->

		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>3.5.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity4</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.maps</groupId>
			<artifactId>google-maps-services</artifactId>
			<version>0.1.14</version>
		</dependency>
		<dependency>
			<groupId>org.imgscalr</groupId>
			<artifactId>imgscalr-lib</artifactId>
			<version>4.2</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.gcm/gcm-server -->
		<dependency>
		    <groupId>com.google.gcm</groupId>
		    <artifactId>gcm-server</artifactId>
		    <version>1.0.0</version>
		</dependency>

		<!-- QR-Code -->
		<dependency>
			<groupId>com.google.zxing</groupId>
			<artifactId>javase</artifactId>
			<version>2.2</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/com.lowagie/itext -->
		<dependency>
    		<groupId>com.lowagie</groupId>
    		<artifactId>itext</artifactId>
    		<version>2.1.7</version>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-mail</artifactId>
		</dependency>


		<!-- Used for integration testing -->
		<dependency>
			<groupId>com.jayway.restassured</groupId>
			<artifactId>rest-assured</artifactId>
			<version>2.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.11.65</version>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>prod</id>
			<activation>
            	<activeByDefault>true</activeByDefault>
       		</activation>
			<properties>
				<finalName.append>prod</finalName.append>
				<integration-tests.skip>true</integration-tests.skip>
			</properties>
		</profile>
		<profile>
			<id>testinstance</id>
			<properties>
				<finalName.append>testinstance</finalName.append>
				<integration-tests.skip>true</integration-tests.skip>
				<copy.application-testinstance.properties>true</copy.application-testinstance.properties>
			</properties>
		</profile>
	</profiles>

	<build>
		<finalName>findLunch-webapp-${finalName.append}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
	           <artifactId>maven-antrun-plugin</artifactId>
	           <executions>
	           	<execution>
	           		<phase>prepare-package</phase>
	           		<goals>
	           			<goal>run</goal>
	           		</goals>
	           		<configuration>
	           			<target if="copy.application-testinstance.properties">
	           				<echo message="start to copy testinstance properties"/>
	           				<delete file="${project.build.outputDirectory}/application.properties"/>
				            <delete file="${project.build.outputDirectory}/data.sql"/>
				            <delete file="${project.build.outputDirectory}/schema.sql"/>
	           				
	           				<copy file="src/main/resources/application-testinstance.properties" tofile="${project.build.outputDirectory}/application.properties"/>
				            <copy file="src/main/resources/dataTestinstance.sql" tofile="${project.build.outputDirectory}/data.sql"/>
				            <copy file="src/main/resources/schemaTestinstance.sql" tofile="${project.build.outputDirectory}/schema.sql"/>
				            <echo message="finished to copy testinstance properties"/>
	           			</target>
	           		</configuration>
	           	</execution>
	           </executions>
	        </plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
						<configuration>
							<skipTests>${integration-tests.skip}</skipTests>
							<includes>
								<include>**/*IT.class</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


</project>
